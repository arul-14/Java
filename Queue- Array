import java.util.*;
public class Que_Array {
	public static void main(String[] args) {
		 que a=new que();
		Scanner sc=new Scanner(System.in);
		int c;
		do {
			System.out.println("********************** WELCOME TO TICKET COUNTER ***********************");
			  System.out.println("1.enq\n2.deq\n3.peak\n4.isfull\n5.is empty\n0.Exit");
			  System.out.println("Enter Your Choice :");
			    int choice=sc.nextInt();
			    switch(choice){
	            case 0:
	                break;
	            case 1:
	              System.out.print("Enter the elements count : ");
	              int count=sc.nextInt();
	              for(int i=0;i<count;i++)
	              a.enq(sc.nextInt());
	                break;
	                case 2:
	                     System.out.print("Enter the elements count : ");
	                      int count1=sc.nextInt();
	                 for(int i=0;i<count1;i++){
	             System.out.println("Deque Element is "+a.deq());
	                 }
	                break;
	                case 3:
	                	a.peakf();
	                	break;
	                case 4:
	                	System.out.println(a.FullQ());
	                	break;
	                case 5:
	                	System.out.println(a.EmtQ());
	                	break;
	    }
	     System.out.println("To continue press 1 :");
	     c=sc.nextInt();
		}while(c==1);
	}
}
class que{
	  static final int size=5;
	  int front,rear;
	  int a[];
	  que(){
	    front=rear=-1;
	    a=new int[size];
	  }
	  void enq(int data){
	    if(front==-1&&rear==-1){
	    front=rear=0;
	    a[rear]=data;
	    System.out.println("Inserted element is "+data);}
	    else if(rear==size-1)
	    System.out.println("Queue Is Full");
	    else{
	      a[++rear]=data;
	      System.out.println("Inserted element is "+data);
	    }
	  }
	  int deq(){
	      if(front==-1&&rear==-1) {
	       System.out.println("Queue Is UnderFlow"); return -1; }
	     else if(front==rear) {
	     front=rear=-1; }
	     else 
	     front++;
	      return front; 
	 
	  }
	  void disp(){
	    for(int i=front;i<=rear;i++)
	    System.out.print(a[i]+" ");
	  }
	  void peakf() {
		  if(front==-1&&rear==-1) { System.out.println("Queue Is UnderFlow"); }
		  else
			  System.out.println("Front element "+a[front]);
		      System.out.println("Rear element "+a[rear]);
	  }
	  boolean FullQ() {
		  if(front==-1&&rear==-1) {return false; }
		  else if(front==0&&rear==size-1) { return true; }
		  else {return false; }
	  }
	  boolean EmtQ(){
		  if(front==-1&&rear==-1) { return true;}
		  else { return false; }
	  }
}
